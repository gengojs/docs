{
  "api": {
    "p1": "次のAPIは、<a href='https://github.com/gengojs?utf8=%E2%9C%93&amp;query=plugin'>デフォルトのプラグイン</a>に関してであるとは異なる場合があります。開発者のプラグインのドキュメントを参照してください。",
    "p2": "ことばの複数回また物の数はサポートされていないため、デフォルトのパーサは、問題を克服するために、<a href='https://github.com/format-message/message-format'>message-format</a>を使用しています。",
    "p3": "message-formatを使用するには、APIまたはオプションでを使用してパーサーを設定します。",
    "p4": "The following API is respect to the default localization plugin. Please refer the the developer's plugin documentation.",
    "code1": "// ロケールを === 'ja'に仮定すると:\n\n// 基本的なフレーズは「こんにちは」に戻ります\n__('Hello');\n\n// 基本的なフレーズとsprintfは「Bob こんにちは」に戻ります\n__('Hello %s', 'Bob');\n\n//　基本的なフレーズと文字列補完は 「Bob こんにちは」に戻ります\n __('Hello {{name}}', {name:'Bob'});\n",
    "code2": "// ロケールを === 'ja'に仮定すると:\n\n// 基本的なブラケットフレーズは「こんにちは」に戻ります\n__('[Hello]');\n\n// 基本的なブラケットフレーズとネストされたキーは「おっす」に戻ります\n__('[Hello].informal');\n\n// 基本的なブラケットフレーズとネストされたキーとsprintfは「おっす、Bob」に戻ります\n__('[Hello %].informal', 'Bob');\n\n// 基本的なブラケットフレーズとネストされたキーと文字列補完は「おっす、Bob」に戻ります\n__('[Hello {{name}}].informal', {name:'Bob'});\n",
    "code3": "// ロケールを === 'ja'に仮定すると:\n\n// 基本的なドットフレーズは「おっす」に戻ります\n__('greeting.hello.informal');\n\n// 基本的なドットフレーズとsprintfは「Bob、 おっす」に戻ります\n__('greeting.hello.person.informal', 'Bob');\n\n// 基本的なドットフレーズと文字列補完は「Bob、おっす」に戻ります\n__('greeting.hello.person.informal', { name:'Bob' });\n",
    "code4": "// ロケールを === 'en-us'に仮定すると:\n\n// 基本的なフレーズとメッセージ・フォーマットは\n// 「You took 4,000 pictures since Jan 1, 2015 9:33:04 AM」に戻ります\n__('You took {n,number} pictures since {d,date} {d,time}', { n:4000, d:new Date() }, { parser: 'format' });\n\n// 基本的なブラケットフレーズとメッセージ・フォーマットは\n//「You took 4,000 pictures since Jan 1, 2015 9:33:04 AM」に戻ります\n__('[You took {n,numbers} pictures].since.date', { n:4000, d:new Date() }, { parser: 'format' });\n\n// 基本的なドットフレーズとメッセージ・フォーマットは\n//「You took 4,000 pictures since Jan 1, 2015 9:33:04 AM」に戻ります\n__('pictures.since.date', { n:4000, d:new Date() }, { format: 'parser' });\n",
    "code5": "// 現在のロケールで、日付、時刻、数値、またはMomentのインスタンスを返します\n__l().[API Method]()\n// 指定されたロケールでの日付、時刻、数値、またはMomentのインスタンスを返します\n__l(locale: String).[API Method]()\n",
    "code6": "// Tokeiのインスタンスを返します\n__l().date();\n",
    "code7": "// Tokeiのインスタンスを返します\n__l().time();\n",
    "code8": "// Tokeiのインスタンスを返します\n__l().number();\n",
    "code9": "// Momentのインスタンスを返します\n__l().moment();\n",
    "code10": "\n// 現在の日付を返します\n__l().date().now();\n// 現在の時刻を返します\n__l().time().now();\n\n",
    "code11": "// 日付をフォーマットします\n__l().date().format(/* date: Date */);\n// 時刻をフォーマットします\n__l().time().format(/* date: Date */);\n// 数値をフォーマットします\n__l().number().format(/* number: Number */);\n"
  },
  "intro": {
    "p1": "gengo.jsは非常に小さな<a href='https://github.com/gengojs/core'>コア</a>によって供給され、どんなノードサーバーにでも使えるi18n/l10nライブラリです。\nコアと一緒に、それはまた、六つのプラグインによって管理されています。これらの組み合わせは、強力とユニークなライブラリーを引き継ぎ、ディベロッパーをその機能を拡張させてくれるライブラリーです。\nコアは、本質的に、このようなプラグインのオプションやプラグイン自体にアクセスする方法として、基礎を提供するユニットです。",
    "p2": "簡単にgengo.jsを初期化することができます。Optionsを参照してください。"
  }
}
